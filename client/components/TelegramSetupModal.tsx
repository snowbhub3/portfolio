import { useState } from "react";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from "@/components/ui/dialog";
import { useTelegram } from "@/hooks/useTelegram";
import { XIcon } from "lucide-react";

interface TelegramSetupModalProps {
  isOpen: boolean;
  onClose: () => void;
}

export const TelegramSetupModal = ({
  isOpen,
  onClose,
}: TelegramSetupModalProps) => {
  const { user, tg } = useTelegram();
  const [activeTab, setActiveTab] = useState<
    "instructions" | "mobile" | "code"
  >("instructions");

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
  };

  const telegramVersion = tg ? parseFloat(tg.version || "0") : 0;
  const isOldVersion = telegramVersion > 0 && telegramVersion < 6.1;
  const appUrl =
    "https://a1c16b064f7149d9a9291176d41387b1-pulse-field.projects.builder.my/";

  const pythonCode = `import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo

BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê"
bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['start', 'wallet'])
def send_wallet(message):
    markup = InlineKeyboardMarkup()
    webapp_button = InlineKeyboardButton(
        text="üí∞ –í—ñ–¥–∫—Ä–∏—Ç–∏ –ö–æ—à–µ–ª—ë–∫",
        web_app=WebAppInfo(url="${appUrl}")
    )
    markup.add(webapp_button)
    
    bot.reply_to(
        message,
        "üöÄ –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Crypto Wallet!\\n\\n"
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ –¥–ª—è –≤—ñ–¥ÔøΩÔøΩ—Ä–∏—Ç—Ç—è –≤–∞—à–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:",
        reply_markup=markup
    )

bot.polling(none_stop=True)`;

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
          </DialogTitle>
          <DialogDescription>
            –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É –¥–æ Telegram –±–æ—Ç–∞
          </DialogDescription>
        </DialogHeader>

        {/* Tabs */}
        <div className="flex gap-1 mb-4">
          <Button
            variant={activeTab === "instructions" ? "default" : "outline"}
            size="sm"
            onClick={() => setActiveTab("instructions")}
          >
            üìã –ó–∞–≥–∞–ª—å–Ω—ñ
          </Button>
          <Button
            variant={activeTab === "mobile" ? "default" : "outline"}
            size="sm"
            onClick={() => setActiveTab("mobile")}
          >
            üì± iPhone/Android
          </Button>
          <Button
            variant={activeTab === "code" ? "default" : "outline"}
            size="sm"
            onClick={() => setActiveTab("code")}
          >
            ü§ñ –ö–æ–¥
          </Button>
        </div>

        {activeTab === "instructions" && (
          <div className="space-y-4">
            {/* –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É */}
            <Card className="p-4 border-blue-200 bg-blue-50">
              <h3 className="font-semibold text-blue-800 mb-2">
                üîç –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω:
              </h3>
              <div className="text-sm text-blue-700 space-y-1">
                <p>‚Ä¢ Telegram API: {tg ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω–∏–π" : "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"}</p>
                {tg && (
                  <>
                    <p>
                      ‚Ä¢ –í–µ—Ä—Å—ñ—è: {tg.version}{" "}
                      {isOldVersion ? "‚ö†Ô∏è (–∑–∞—Å—Ç–∞—Ä—ñ–ª–∞)" : "‚úÖ (—Å—É—á–∞—Å–Ω–∞)"}
                    </p>
                    <p>
                      ‚Ä¢ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {user ? "‚úÖ –î–æ—Å—Ç—É–ø–Ω—ñ" : "‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ"}
                    </p>
                  </>
                )}
              </div>
            </Card>

            {/* –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—É –≤–µ—Ä—Å—ñ—é */}
            {isOldVersion && (
              <Card className="p-4 border-orange-300 bg-orange-50">
                <h3 className="font-semibold text-orange-800 mb-2">
                  ‚ö†Ô∏è –ó–∞—Å—Ç–∞—Ä—ñ–ª–∞ –≤–µ—Ä—Å—ñ—è Telegram
                </h3>
                <p className="text-sm text-orange-700 mb-3">
                  –ü–æ—Ç–æ—á–Ω–∞ –≤–µ—Ä—Å—ñ—è: {telegramVersion}. –ü–æ—Ç—Ä—ñ–±–Ω–∞: 6.1+
                </p>
                <ul className="text-sm text-orange-700 space-y-1 pl-4">
                  <li>‚Ä¢ –î–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è</li>
                  <li>‚Ä¢ BackButton –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π</li>
                  <li>‚Ä¢ –û–±–º–µ–∂–µ–Ω–∏–π HapticFeedback</li>
                </ul>
                <p className="text-sm text-orange-800 font-medium mt-2">
                  –†–Ü–®–ï–ù–ù–Ø: –û–Ω–æ–≤—ñ—Ç—å Telegram –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ inline –∫–Ω–æ–ø–∫—É
                </p>
              </Card>
            )}

            {/* –û—Å–Ω–æ–≤–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó */}
            <div className="space-y-3">
              <h3 className="text-lg font-semibold">–ö—Ä–æ–∫ –∑–∞ –∫—Ä–æ–∫–æ–º:</h3>

              <Card className="p-3 border">
                <h4 className="font-semibold text-sm mb-2">
                  1Ô∏è‚É£ –í—ñ–¥–∫—Ä–∏–π—Ç–µ @BotFather —É Telegram
                </h4>
              </Card>

              <Card className="p-3 border">
                <h4 className="font-semibold text-sm mb-2">
                  2Ô∏è‚É£ –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É:
                </h4>
                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex justify-between items-center">
                  <span>/setmenubutton</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("/setmenubutton")}
                  >
                    üìã
                  </Button>
                </div>
              </Card>

              <Card className="p-3 border">
                <h4 className="font-semibold text-sm mb-2">
                  3Ô∏è‚É£ –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –Ω–∞–∑–≤—É –∫–Ω–æ–ø–∫–∏:
                </h4>
                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex justify-between items-center">
                  <span>–ö–æ—à–µ–ª—ë–∫</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("–ö–æ—à–µ–ª—ë–∫")}
                  >
                    üìã
                  </Button>
                </div>
              </Card>

              <Card className="p-3 border">
                <h4 className="font-semibold text-sm mb-2">
                  4Ô∏è‚É£ –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å URL:
                </h4>
                <div className="bg-gray-100 p-2 rounded font-mono text-xs break-all flex justify-between items-center">
                  <span className="flex-1 mr-2">{appUrl}</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard(appUrl)}
                  >
                    üìã
                  </Button>
                </div>
              </Card>

              <Card className="p-3 border">
                <h4 className="font-semibold text-sm mb-2">
                  5Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å Telegram —Ç–∞ –≤—ñ–¥–∫—Ä–∏–π—Ç–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
                </h4>
              </Card>
            </div>
          </div>
        )}

        {activeTab === "mobile" && (
          <div className="space-y-4">
            {/* iPhone —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó */}
            <Card className="p-4 border-blue-200 bg-blue-50">
              <h3 className="font-semibold text-blue-800 mb-2">
                üì± –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è iPhone/Android
              </h3>
              <p className="text-sm text-blue-700 mb-3">
                –ù–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö Menu Button —á–∞—Å—Ç–æ –Ω–µ –ø–µ—Ä–µ–¥–∞—î –¥–∞–Ω—ñ
                –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ Web App.
              </p>
            </Card>

            {/* –ö—Ä–æ–∫ 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Web App */}
            <Card className="p-4 border">
              <h4 className="font-semibold text-sm mb-2">
                1Ô∏è‚É£ –°—Ç–≤–æ—Ä—ñ—Ç—å Web App —É @BotFather:
              </h4>
              <div className="space-y-2">
                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex justify-between items-center">
                  <span>/newapp</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("/newapp")}
                  >
                    üìã
                  </Button>
                </div>
                <div className="text-xs text-gray-600 space-y-1 pl-2">
                  <p>‚Ä¢ –í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à–æ–≥–æ –±–æ—Ç–∞</p>
                  <p>
                    ‚Ä¢ –ù–∞–∑–≤–∞: <strong>Crypto Wallet</strong>
                  </p>
                  <p>
                    ‚Ä¢ –û–ø–∏—Å: <strong>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∏–π –∫–æ—à–µ–ª—ë–∫</strong>
                  </p>
                  <p>‚Ä¢ –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —ñ–∫–æ–Ω–∫—É 512x512 –ø—ñ–∫—Å–µ–ª—ñ–≤</p>
                </div>
              </div>
            </Card>

            {/* –ö—Ä–æ–∫ 2: URL –¥–ª—è Web App */}
            <Card className="p-4 border">
              <h4 className="font-semibold text-sm mb-2">2Ô∏è‚É£ Web App URL:</h4>
              <div className="bg-gray-100 p-2 rounded font-mono text-xs break-all flex justify-between items-center">
                <span className="flex-1 mr-2">{appUrl}</span>
                <Button
                  size="sm"
                  variant="outline"
                  onClick={() => copyToClipboard(appUrl)}
                >
                  üìã
                </Button>
              </div>
            </Card>

            {/* –ö—Ä–æ–∫ 3: Menu Button –∑ Web App */}
            <Card className="p-4 border">
              <h4 className="font-semibold text-sm mb-2">
                3Ô∏è‚É£ –ù–∞–ª–∞—à—Ç—É–π—Ç–µ Menu Button –∑ Web App:
              </h4>
              <div className="space-y-2">
                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex justify-between items-center">
                  <span>/setmenubutton</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("/setmenubutton")}
                  >
                    üìã
                  </Button>
                </div>
                <div className="text-xs text-gray-600 space-y-1 pl-2">
                  <p>‚Ä¢ –í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—à–æ–≥–æ –±–æ—Ç–∞</p>
                  <p>
                    ‚Ä¢ –ù–∞–∑–≤–∞ –∫–Ω–æ–ø–∫–∏: <strong>–ö–æ—à–µ–ª—ë–∫</strong>
                  </p>
                  <p>
                    ‚Ä¢ <strong>–í–ê–ñ–õ–ò–í–û:</strong> –í–∏–±–µ—Ä—ñ—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–∏–π Web App (–Ω–µ
                    –≤–≤–æ–¥—å—Ç–µ URL –≤—Ä—É—á–Ω—É)
                  </p>
                </div>
              </div>
            </Card>

            {/* –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± - inline –∫–Ω–æ–ø–∫–∞ */}
            <Card className="p-4 border-green-200 bg-green-50">
              <h4 className="font-semibold text-green-800 mb-2">
                üîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: Inline –∫–Ω–æ–ø–∫–∞ (100% –ø—Ä–∞—Ü—é—î)
              </h4>
              <p className="text-sm text-green-700 mb-2">
                –Ø–∫—â–æ Menu Button –Ω–µ –ø—Ä–∞—Ü—é—î, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ inline –∫–Ω–æ–ø–∫—É:
              </p>
              <div className="bg-gray-900 text-green-400 p-3 rounded text-xs overflow-x-auto">
                <code>{`@bot.message_handler(commands=['start'])
def start(message):
    markup = InlineKeyboardMarkup()
    button = InlineKeyboardButton(
        "üí∞ –ö–æ—à–µ–ª—ë–∫",
        web_app=WebAppInfo("${appUrl}")
    )
    markup.add(button)
    bot.reply_to(message, "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É:", reply_markup=markup)`}</code>
              </div>
            </Card>

            {/* –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É */}
            <Card className="p-4 border-orange-200 bg-orange-50">
              <h4 className="font-semibold text-orange-800 mb-2">
                üì± –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É:
              </h4>
              <ol className="text-sm text-orange-700 space-y-1 pl-4">
                <li>
                  1. <strong>–í–∏–¥–∞–ª—ñ—Ç—å –±–æ—Ç–∞ –∑ —á–∞—Ç—ñ–≤</strong> (–≤–∞–∂–ª–∏–≤–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
                  –∫–µ—à–∞)
                </li>
                <li>2. –ó–Ω–∞–π–¥—ñ—Ç—å –±–æ—Ç–∞ –∑–Ω–æ–≤—É —á–µ—Ä–µ–∑ @username</li>
                <li>3. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /start</li>
                <li>4. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –º–µ–Ω—é (‚ò∞) –∞–±–æ inline –∫–Ω–æ–ø–∫—É</li>
                <li>5. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —â–æ –∑'—è–≤–∏–ª–∏—Å—è —Ä–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</li>
              </ol>
            </Card>

            {/* –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–æ–≥–æ */}
            <Card className="p-4 border-purple-200 bg-purple-50">
              <h4 className="font-semibold text-purple-800 mb-2">
                üîç –©–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ:
              </h4>
              <div className="text-sm text-purple-700 space-y-1">
                <p>
                  ‚úÖ <strong>Platform:</strong> "ios" –∞–±–æ "android" (–Ω–µ
                  "unknown")
                </p>
                <p>
                  ‚úÖ <strong>initData length:</strong> {">"} 0 (–Ω–µ 0)
                </p>
                <p>
                  ‚úÖ <strong>User data:</strong> —Ä–µ–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ (–Ω–µ undefined)
                </p>
                <p>
                  ‚úÖ <strong>–ú–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫—É:</strong> "Web App" (–Ω–µ "Unknown")
                </p>
              </div>
            </Card>
          </div>
        )}

        {activeTab === "code" && (
          <div className="space-y-4">
            <Card className="p-4 border-green-200 bg-green-50">
              <h3 className="font-semibold text-green-800 mb-2">
                ü§ñ –ì–æ—Ç–æ–≤–∏–π –∫–æ–¥ –¥–ª—è Python –±–æ—Ç–∞ (–ø—Ä–∞—Ü—é—î —É –≤—Å—ñ—Ö –≤–µ—Ä—Å—ñ—è—Ö)
              </h3>
              <p className="text-sm text-green-700 mb-3">
                –¶–µ–π –∫–æ–¥ —Å—Ç–≤–æ—Ä—é—î inline –∫–Ω–æ–ø–∫—É, —è–∫–∞ –ø–µ—Ä–µ–¥–∞—î –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É
                –≤—Å—ñ—Ö –≤–µ—Ä—Å—ñ—è—Ö Telegram
              </p>

              <div className="relative">
                <pre className="bg-gray-900 text-green-400 p-4 rounded overflow-x-auto text-xs">
                  <code>{pythonCode}</code>
                </pre>
                <Button
                  size="sm"
                  className="absolute top-2 right-2 bg-green-600 hover:bg-green-700"
                  onClick={() => copyToClipboard(pythonCode)}
                >
                  üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏
                </Button>
              </div>
            </Card>

            <Card className="p-4 border-yellow-200 bg-yellow-50">
              <h3 className="font-semibold text-yellow-800 mb-2">
                üîë –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É –±–æ—Ç–∞:
              </h3>
              <ol className="text-sm text-yellow-700 space-y-1 pl-4">
                <li>1. –ù–∞–ø–∏—à—ñ—Ç—å @BotFather —É Telegram</li>
                <li>2. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot</li>
                <li>3. –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: Crypto Wallet)</li>
                <li>4. –í–∫–∞–∂—ñ—Ç—å username –±–æ—Ç–∞ (–º–∞—î –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è –Ω–∞ "bot")</li>
                <li>5. –°–∫–æ–ø—ñ—é–π—Ç–µ —Ç–æ–∫–µ–Ω —ñ –∑–∞–º—ñ–Ω—ñ—Ç—å "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê" —É –∫–æ–¥—ñ</li>
              </ol>
            </Card>

            <Card className="p-4 border-blue-200 bg-blue-50">
              <h3 className="font-semibold text-blue-800 mb-2">
                üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫:
              </h3>
              <div className="space-y-2">
                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex justify-between items-center">
                  <span>pip install pyTelegramBotAPI</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() =>
                      copyToClipboard("pip install pyTelegramBotAPI")
                    }
                  >
                    üìã
                  </Button>
                </div>
                <div className="bg-gray-100 p-2 rounded font-mono text-sm flex justify-between items-center">
                  <span>python bot.py</span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard("python bot.py")}
                  >
                    üìã
                  </Button>
                </div>
              </div>
            </Card>
          </div>
        )}

        <div className="flex justify-end pt-4 border-t">
          <Button onClick={onClose} variant="outline">
            –ó–∞–∫—Ä–∏—Ç–∏
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  );
};
