// –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç—Ä–µ–Ω–¥–æ–≤–∏–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏
import { AssetPrice } from "./priceService";

// –í—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –∞–∫—Ç–∏–≤–∏ –¥–ª—è —Ç—Ä–µ–Ω–¥–∏–Ω–≥—É
export interface TrendingAsset {
  id: string;
  symbol: string;
  name: string;
  price: number;
  change24h: number;
  icon: string;
  iconBgColor: string;
  category: "stocks" | "crypto" | "gold";
}

export const ALL_TRENDING_ASSETS: TrendingAsset[] = [
  // –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∏
  {
    id: "btc",
    symbol: "BTC",
    name: "Bitcoin",
    price: 109008.18,
    change24h: 1.09,
    icon: "‚Çø",
    iconBgColor: "bg-orange-500",
    category: "crypto",
  },
  {
    id: "eth",
    symbol: "ETH",
    name: "Ethereum",
    price: 2620.19,
    change24h: 3.52,
    icon: "Œû",
    iconBgColor: "bg-blue-600",
    category: "crypto",
  },
  {
    id: "ton",
    symbol: "TON",
    name: "Toncoin",
    price: 2.92,
    change24h: -0.47,
    icon: "üî∑",
    iconBgColor: "bg-blue-500",
    category: "crypto",
  },
  {
    id: "sol",
    symbol: "SOL",
    name: "Solana",
    price: 152.47,
    change24h: 1.67,
    icon: "üåÖ",
    iconBgColor: "bg-purple-500",
    category: "crypto",
  },

  // –ê–∫—Ü—ñ—ó
  {
    id: "aapl",
    symbol: "AAPL",
    name: "Apple Inc.",
    price: 189.84,
    change24h: 1.25,
    icon: "üçé",
    iconBgColor: "bg-gray-500",
    category: "stocks",
  },
  {
    id: "tsla",
    symbol: "TSLA",
    name: "Tesla",
    price: 248.98,
    change24h: -2.15,
    icon: "üöó",
    iconBgColor: "bg-red-500",
    category: "stocks",
  },
  {
    id: "msft",
    symbol: "MSFT",
    name: "Microsoft",
    price: 415.75,
    change24h: 0.85,
    icon: "üñ•Ô∏è",
    iconBgColor: "bg-blue-500",
    category: "stocks",
  },
  {
    id: "googl",
    symbol: "GOOGL",
    name: "Alphabet",
    price: 172.48,
    change24h: 1.15,
    icon: "üîç",
    iconBgColor: "bg-green-500",
    category: "stocks",
  },

  // –ó–æ–ª–æ—Ç–æ —Ç–∞ –º–µ—Ç–∞–ª–∏
  {
    id: "gold",
    symbol: "GOLD",
    name: "–ó–æ–ª–æ—Ç–æ",
    price: 2650.5,
    change24h: 0.75,
    icon: "ü•á",
    iconBgColor: "bg-yellow-500",
    category: "gold",
  },
  {
    id: "silver",
    symbol: "SILVER",
    name: "–°—Ä—ñ–±–ª–æ",
    price: 30.85,
    change24h: 1.22,
    icon: "ü•à",
    iconBgColor: "bg-gray-400",
    category: "gold",
  },
  {
    id: "platinum",
    symbol: "PLATINUM",
    name: "–ü–ª–∞—Ç–∏–Ω–∞",
    price: 945.2,
    change24h: -0.45,
    icon: "‚ö™",
    iconBgColor: "bg-gray-600",
    category: "gold",
  },

  // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∞–∫—Ç–∏–≤–∏ –¥–ª—è —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–æ—Å—Ç—ñ
  {
    id: "xrp",
    symbol: "XRP",
    name: "XRP",
    price: 2.313,
    change24h: 0.94,
    icon: "üî∑",
    iconBgColor: "bg-blue-400",
    category: "crypto",
  },
];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–ø-4 –∞–∫—Ç–∏–≤—ñ–≤ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º
export function getTopPerformingAssets(
  priceUpdates: Record<string, AssetPrice>,
): TrendingAsset[] {
  // –û–Ω–æ–≤–ª—é—î–º–æ —Ü—ñ–Ω–∏ –∞–∫—Ç–∏–≤—ñ–≤ –∑ —Ä–µ–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö
  const updatedAssets = ALL_TRENDING_ASSETS.map((asset) => {
    const priceUpdate = priceUpdates[asset.id];
    return priceUpdate
      ? {
          ...asset,
          price: priceUpdate.price,
          change24h: priceUpdate.change24h,
        }
      : asset;
  });

  // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –∑–∞ 24 –≥–æ–¥–∏–Ω–∏ (–≤—ñ–¥ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –¥–æ –Ω–∞–π–º–µ–Ω—à–æ–≥–æ)
  const sortedAssets = updatedAssets.sort((a, b) => b.change24h - a.change24h);

  // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–æ–ø-4
  return sortedAssets.slice(0, 4);
}

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º—ñ–Ω—ñ-–≥—Ä–∞—Ñ—ñ–∫—ñ–≤ –¥–ª—è –∞–∫—Ç–∏–≤—ñ–≤
export function generateMiniChartData(
  asset: TrendingAsset,
  pointsCount: number = 20,
): number[] {
  const currentPrice = asset.price;
  const change24h = asset.change24h;

  // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É —Ü—ñ–Ω—É (24 –≥–æ–¥–∏–Ω–∏ —Ç–æ–º—É)
  const startPrice = currentPrice / (1 + change24h / 100);

  // –ì–µ–Ω–µ—Ä—É—î–º–æ —Ç–æ—á–∫–∏ –º—ñ–∂ –ø–æ—á–∞—Ç–∫–æ–≤–æ—é —Ç–∞ –ø–æ—Ç–æ—á–Ω–æ—é —Ü—ñ–Ω–æ—é
  const points: number[] = [];
  for (let i = 0; i < pointsCount; i++) {
    const progress = i / (pointsCount - 1);

    // –î–æ–¥–∞—î–º–æ —Ç—Ä–æ—Ö–∏ –≤–∏–ø–∞–¥–∫–æ–≤–æ—Å—Ç—ñ –¥–ª—è —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—Å—Ç—ñ
    const randomFactor = 1 + (Math.random() - 0.5) * 0.02; // ¬±1% –≤–∏–ø–∞–¥–∫–æ–≤–æ—Å—Ç—ñ

    // –Ü–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü—ñ—è –º—ñ–∂ ÔøΩÔøΩ–æ—á–∞—Ç–∫–æ–≤–æ—é —Ç–∞ –∫—ñ–Ω—Ü–µ–≤–æ—é —Ü—ñ–Ω–æ—é
    const interpolatedPrice =
      startPrice + (currentPrice - startPrice) * progress;
    points.push(interpolatedPrice * randomFactor);
  }

  return points;
}
